{"meta":{"title":"Struggle","subtitle":"XJBL","description":"坚持这个词听起来就要费好大力气的，做喜欢的事从来不叫坚持，比如写Blog","author":"DRS","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"hexo博客搭建","slug":"hexo博客搭建","date":"2020-07-09T08:34:17.000Z","updated":"2020-07-10T02:38:25.649Z","comments":true,"path":"2020/07/09/hexo博客搭建/","link":"","permalink":"http://yoursite.com/2020/07/09/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"","text":"简要写一下大致步骤，以便下次再次搭建Hexo博客时有所参考。 一、配置Github登录GitHub官网，注册，记住自己的 Username，然后在页面右上角 Creat a new repository，在 Repository name 填入自己的名字 yourname.github.io ，其中 yourname 与你注册的用户名一致，例如我的就填的 DouRenShi.github.io 。 二、环境安装在node.js官网下载LTS版，安装。安装完成之后会形成两个组件： node.js 和 npm 包管理器。 打开Windows的终端cmd，也可用cmder或GitBash替代。键入node -v可以查看node.js的版本，键入npm -v可以查看npm包管理器的版本。 三、安装hexo博客框架为了加快安装速度，先用npm安装淘宝的镜像源cnpm。 npm install -g cnpm --registry-https://registry.npm.org安装完成之后用cnpm -v来查看cnpm的版本。然后用cnpm来安装hexo。 cnpm install -g hexo-cli完事儿之后可以用hexo -v查看hexo版本。 四、选个地方建立一个空文件夹命名为blog用你的终端（cmder或者GitBash）打开这个文件夹，执行如下命令 sudo hexo init完成之后便可以在blog文件夹下看到一堆乱七八糟的文件。你可以在hexo官网看每个文件是干啥滴。 然后键入hexo s来启动博客。即可以浏览器访问localhost:4000本地预览你博客初步的样子。 五、新建一篇博文并编辑内容键入以下命令来新建一篇博文 hexo n &quot;我的第一篇博客文章&quot;然后键入cd source/_posts/进入存储博客内容的文件夹，键入ls查看文件夹所有文件。 然后用vim编辑器或者SublimeText3来打开这篇新建的博文编辑一下内容并保存。然后回到博客根目录键入 hexo g //生成文档 hexo s //启动然后安装一个部署插件 cnmp install --save hexo-deployer-git六、配置博客部署到远端在blog目录下用sublime打开_config文件修改参数信息。注意每个参数的：后都应该有一个空格。DouRenShi是我的用户名。 deploy: type: git repo: https://github.com/DouRenShi/DouRenShi.github.io.git branch: master完事之后保存退出。 在blog目录下键入hexo d回车，然后它会让你输入GitHub的账户和密码，完事之后你就可以在http://dourenshi.github.io访问你的博客了。","categories":[],"tags":[]},{"title":"Hexo博客插入链接和图片","slug":"Hexo博客插入链接和图片","date":"2020-07-09T03:37:31.000Z","updated":"2020-07-09T08:08:00.396Z","comments":true,"path":"2020/07/09/Hexo博客插入链接和图片/","link":"","permalink":"http://yoursite.com/2020/07/09/Hexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E5%85%A5%E9%93%BE%E6%8E%A5%E5%92%8C%E5%9B%BE%E7%89%87/","excerpt":"","text":"插入链接的两种方式1.行内式 非本主机资源-绝对路径 代码： This is [an example](https://www.baidu.com) inline link. This is [an example](https://www.baidu.com/ &quot;百度&quot;) inline link.效果： This is an example inline link.This is an example inline link. 本主机资源-相对路径 代码： see my [About](/about/) page for details.效果： see my About page for details. 2.参考式(比较好读)代码： I get 10 times more traffic from [Google][1] than from [Yahoo][2] or [MSN][3]. This is [an example][id] reference-style link. Plise click [baidu][]. [1]: http://google.com/ &quot;Google&quot; [2]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [3]: http://search.msn.com/ &quot;MSN Search&quot; [baidu]: https://www.baidu.com &quot;百度&quot; [id]: https://www.baidu.com &quot;百度&quot;效果： I get 10 times more traffic from Google than from Yahoo or MSN. This is an example reference-style link. Plise click baidu. 注意事项：包含链接的句子与链接的解释要至少间隔一行。 插入图片 第一步：安装插件，在hexo的根目录下打开Git Bash,执行如下指令： npm install hexo-asset-image --save 第二步：用编辑器打开hexo的配置文件_config.yml找到post_asset_folder，把这个选项从false改成true 第三步：打开node_modules/hexo-asset-image/index.js并将内容换为如下代码 第四步：以行内式插入本地图片 代码格式：最前面是英文的感叹号，之后中括号里是图片的替代文字，之后的小括号内是图片的路径，注意图片放在与所建博客同名的文件夹下。 ![这是代替图片的文字，随便写](Hexo博客插入链接和图片/avatar.jpg)这是插入图片后的样子 参考链接： https://www.jianshu.com/p/f72aaad7b852 https://blog.csdn.net/xjm850552586/article/details/84101345 https://blog.csdn.net/qq_38148394/article/details/79997971","categories":[],"tags":[]},{"title":"博客相关内容介绍","slug":"博客相关内容介绍","date":"2020-07-08T08:05:16.000Z","updated":"2020-07-10T03:44:13.458Z","comments":true,"path":"2020/07/08/博客相关内容介绍/","link":"","permalink":"http://yoursite.com/2020/07/08/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"作为一个初创博客的编程小白，跟着视频果然弄好一个博客，目的是记录我每天的学习，让我在以后能系统的梳理和回顾所学。在搭建博客的过程中我要到了许多生疏的概念或者名词，现在我把他们记录下来，逐个击破。 #Hexo 官网解释:Hexo是一个快速、简洁且高效的博客框架。他支持Markdown的所有功能。要通过hexo官网清楚你创建的blog文件里每个文件夹有什么作用，清楚几条创建博客的指令。 #Markdown 解释：Markdown一种轻量级标记语言，是个简单的，非常容易学的排版语法。专门为那些想要在不需要使用鼠标就可以在键盘敲完后使得文字已经完成排版的人设计，比如码农，博客写手等等，如果你在使用像GitHub这样的把Markdown作为主流编辑方式的网站也需要学markdown语法。早上搜了半天Markdown官网，瞅了半天英文，说实话有些困难，下午才找到markdown中文网站和可以实验语法效果的markdown-HTML转换器。而HTML（超文本标记语言）是一种用于创建网页的标准标记语言，可以通过学习HTML语法使用HTML创建自己的WEB站点。 #编辑器Sublime Text3 Sublime Text号称最性感的跨平台编辑器，包含多种语言，比自带的记事本功能强大，它属于文本编辑器，是用来编辑纯文本文件的，比如Windows中的.txt文件，从网上了解到Windows自带的记事本并不好用，还会带来许多问题，慎用记事本，因此我决定要下载一个Sublime Text3，我之前用的cmder里集成的vim编辑器，关于vim编辑器的操作请参考CSDN博客。 还要知道纯文本文件如txt与普通的二进制文件的区别。文本文件是按照字符存储的（包括定长编码方式ASCII和变长编码方式Unicode中的UTF-8），二进制文件是按照数据类型存储的。例如3.1415926如果存储为ASCII格式的文本文件为3、.、1、4、1、5、9、2、6对应的ASCII码为十进制的63、56、61、64、61、65、71、62、66，每个字符占用一个字节的空间，一共占用9个字符的空间。如果按照二进制文件存储，3.1415926就是一个浮点数，占用4个字符存储空间。总结一下，文本文件较二进制文件占用更多空间，但文本文件的译码方式简单。 #控制台Cmder 和Git Bash Cmder是Windows下非常好用的终端模拟器，用于替换Windows自带终端cmd，它可以在不同的标签页中同时链接不同的底层Shell，并提供相关增强的功能和更加便捷的快捷方式。里面支持大部分Linux命令。相关指令如下： pwd 显示当前路径或文件夹所在位置 ls 显示出当前目录下的文件和文件夹 cd 从当前文件夹转到另外一个文件夹 cp 复制一份文件 mv 移动文件到不同目录或在当前目录对文件改名 rm 删除一个文件 mkdir 创建一个文件夹 rmdir 删除一个文件夹 clear 清屏Git Bash是Windows下使用git命令的模拟终端，相关指令如下： cd &lt;路径&gt; 进入到指定目录 cd .. 返回上级目录 pwd 显示当前目录 ls 查看文件夹 ls-a 在原基础上显示出隐藏文件夹 ls-l 查看更多文件信息 mv 移动文件 touch 创建文件，不可指定内容 echo 创建文件，不可指定内容 cat 查看文件内容#环境变量 设置环境变量：右键点击此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量 注：变量名和变量值设置时不要含有空格和中文，多个路径使用；分隔，通常用户变量一经修改立刻生效，系统变量需重启电脑才能生效，对于正在运行的程序需要关闭后重新运行新设置才能生效。 环境变量的应用： 在运行中快速启动应用 命令行启动可执行文件 将cmder添加到环境变量步骤示例：在系统变量中设置变量名cmder,变量值为cmder这个软件包的解压位置，然后点击系统变量中的path，新建，输入%cmder%，至此环境变量配置完成。 我在将cmder设置右键菜单用到了环境变量的设置。如何用cmder命令行打开sublime呢？网上的相关资源比较少。所以我改用Git Blash做控制台，在Git Blash中用sublime text打开文件相关网络资源较为丰富。配置方法如下： 打开Git Blash，切换到C:\\Program Files\\Git\\mingw64\\bin目录下（注意是自己安装git的目录） 在该目录下新建文件名，比如：subl（注意不能有后缀名），命令如下： touch subl //新建sublime文件 vim subl //用vim编辑器打开这个文件，输入文件内容。 subl的文件内容如下： #!/bin/sh “D:\\SublimeText3\\Sublime Text Build 3207\\sublime_text.exe” $1 &amp; 代码解析; 第一行表示是个shell脚本，第二行&quot;&quot;内是sublime的安装目录，$1是取的命令后输入的一个参数，&amp;是指此命令在后台打开。 输入subl &lt;文件名&gt;就可以使用了。 我们还可以举一反三，在其他命令下用其他编辑器打开文件。参考：https://blog.csdn.net/ViMan1204/article/details/89230281遇到的问题:在touch subl创建文件时总是提示没有权限，解决方法：设置git bash软件以管理员身份运行，并且在C盘设置开启写入权限。 #Git与GitHub Git是世界上最先进的分布式版本控制系统，GitHub是免费的可用来存放开源项目的远程仓库，GitHub还是一个开源协作社区，通过它，你可以让别人参与你的开源项目，也可以参与别人的开源项目。GitHub只支持Git作为惟一的版本库格式进行托管。（廖雪峰的官方网站有好多教程，包括Git教程） #把SSH Key 添加到GitHub SSH：是一种非常安全的加密协议，防止网络监听引起的密码泄露问题。OpenSSH通常作为SSH实现的协议软件，目前已经是大多数Linux和BSD操作系统的标准组件。SSH最常用的方式是代替telnet进行远程登录。添加SSH Key步骤参考github文件官网： ##步骤一：修改_config文件 在你的GitHub仓库点击code，点击useSSH后复制SSH形式的网站。 用sublime打开博客根目录下的_config文件，在文件底部的 deploy: type: git repo: https://github.com/DouRenShi/DouRenShi.github.io.git branch: master修改为如下内容后保存。 deploy: type: git repo: git@github.com:DouRenShi/DouRenShi.github.io.git branch: master##步骤二：创建新的SSH Key 用Git Blash打开你的博客文件夹,键入以下指令检查现有密钥。 ls -al ~/.ssh 来查看是否有公钥，默认情况下公钥是下列三个文件之一。 id_rsa.pub id_ecdsa.pub id_ed25519.pub 键入以下指令，替换为您的GitHub电子邮件地址。 ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; 当提示您“输入要在其中保存密钥的文件”时，请按Enter。接受默认文件存储位置。 &gt; Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa):[Press enter] 在提示符下，键入一个安全密码或设置为空。 &gt; Enter passphrase (empty for no passphrase): [Type a passphrase] &gt; Enter same passphrase again: [Type passphrase again] ##步骤三：把SSH Key添加到ssh-agent 键入下列指令启动ssh-agent。 eval $(ssh-agent -s) 键入下列指令将SSH Key添加到ssh-agent。 ssh-add ~/.ssh/id_rsa 这样就成功在本地生成了一个可用的SSHkey。 ##步骤四：将SSHkey添加到GitHub 首先打开id_rsa.pub文件复制所有内容。或者在GitBash运行如下命令把SSHkey复制到你的剪贴板： clip &lt; ~/.ssh/id_rsa.pub在你的GitHub主页的任意界面点击你头像的下拉箭头，点击Settings，点击SSHandGPGkeys，点击NewSSHkey，将刚刚复制的内容粘贴到里面。后点击Addkey. ##遇到的问题： 按操作装好ssh key后，发现用cmder编辑hexo d还是要输密码，但是用Git Blash键入hexo d则不需要密码，并且一些指令在Git Blash输入后正常，在cmder输入后不正常，我以后还是用Git Blash做控制台发博客较好。","categories":[],"tags":[]}],"categories":[],"tags":[]}